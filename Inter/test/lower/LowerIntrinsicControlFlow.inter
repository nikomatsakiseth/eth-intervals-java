package lower;

class LowerIntrinsicControlFlow {
    chooseOne(Boolean cond) {
        a = 3;
        b = 4;
        cond if { a } else { b };
    }
    
    conditionallyModifyLocal(Boolean cond) {
        a = 3;
        cond if { 
            a = a + 4;
        };
        a
    }
    
    checkForNull(Object value) {
        a = 3;
        b = 5;
        value ifNull {
            a = a + b;
        };
        b
    }
    
    checkForNullElse(Object value) {
        value ifNull {
            value toString()
        } else {
            0
        }
    }
    
    infiniteLoop() {
        result = 0;
        { true } while { result = result + 1; };
        result
    }
    
    Void errors(Boolean c) {
        // XXX: the first example should really have return type java.lang.Integer
        (chooseOne(c)) badMethod();                // ERROR no.such.method((java.lang.Void), badMethod())
        (conditionallyModifyLocal(c)) badMethod(); // ERROR no.such.method((java.lang.Integer), badMethod())
        (checkForNull(c)) badMethod();             // ERROR no.such.method((java.lang.Integer), badMethod())
        (checkForNullElse(c)) badMethod();         // ERROR no.such.method((java.lang.Void), badMethod())
        (infiniteLoop()) badMethod();              // ERROR no.such.method((java.lang.Integer), badMethod())
    }

}
// COMPILE
// --dump-lowered-trees 