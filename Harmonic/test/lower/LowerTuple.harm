package test.lower;

class LowerTuple {
    tuple4() {
        return (1, "harmonic", "interval", 2);
    }
    
    unpack() {
        (a, b, c, d) = tuple4();
    }
    
    arguments(a: Integer, b: String, c: String, d: Integer) {
    }
    
    toVar() {
        (a, b, c, d) = (1, "harmonic", "interval", 2);
        return arguments(a, b, c, d);
    }
    
    withBlock() {
        sumBlock = { (a: Integer, b: Integer) -> a + b };
        return sumBlock.value(1, 2);
    }
    
    errors(): Void {
        (a, b, c, d) = tuple4();
        a.badMethod(); // ERROR no.such.method(java.lang.Integer, badMethod())
        b.badMethod(); // ERROR no.such.method(java.lang.String, badMethod())
        c.badMethod(); // ERROR no.such.method(java.lang.String, badMethod())
        d.badMethod(); // ERROR no.such.method(java.lang.Integer, badMethod())
    }

}
// COMPILE
// --dump-lowered-trees
// --ignore-errors