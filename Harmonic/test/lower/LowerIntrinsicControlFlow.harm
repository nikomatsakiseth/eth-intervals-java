package test.lower;

class LowerIntrinsicControlFlow {
    chooseOne(cond: Boolean) {
        a = 3;
        b = 4;
        return cond.if { a } else { b };
    }
    
    conditionallyModifyLocal(cond: Boolean) {
        a = 3;
        cond.if { 
            a = a + 4;
        };
        return a;
    }
    
    checkForNull(value: Object) {
        a = 3;
        b = 5;
        value.ifNull {
            a = a + b;
        };
        return b;
    }
    
    checkForNullElse(value: Object) {
        return value.ifNull {
            value.toString()
        } else {
            0
        };
    }
    
    infiniteLoop() {
        result = 0;
        { true }.while { result = result + 1; };
        return result;
    }
    
    errors(c: Boolean): Void {
        // FIXME: the first example should really have return type java.lang.Integer
        chooseOne(c).badMethod();                // ERROR NoSuchMethod(java.lang.Void, badMethod())
        conditionallyModifyLocal(c).badMethod(); // ERROR NoSuchMethod(java.lang.Integer, badMethod())
        checkForNull(c).badMethod();             // ERROR NoSuchMethod(java.lang.Integer, badMethod())
        checkForNullElse(c).badMethod();         // ERROR NoSuchMethod(java.lang.Void, badMethod())
        infiniteLoop().badMethod();              // ERROR NoSuchMethod(java.lang.Integer, badMethod())
    }

}
// COMPILE
// --dump-lowered-trees 